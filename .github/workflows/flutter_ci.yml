name: Flutter CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter 3.32.4
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
          channel: stable
      - name: Install dependencies
        run: flutter pub get
      - name: Analyze code (fail only on errors)
        run: |
          flutter analyze --no-fatal-infos --no-fatal-warnings
      - name: Run tests
        run: flutter test --coverage
      - name: Check for pubspec.yaml errors
        run: |
          if ! flutter pub get; then
            echo 'pubspec.yaml or dependency error detected.'
            exit 1
          fi
      - name: Check for YAML format errors
        run: |
          if ! python3 -c 'import yaml,sys; yaml.safe_load(open("pubspec.yaml"))'; then
            echo 'YAML format error in pubspec.yaml.'
            exit 1
          fi
      - name: Check required Session Pooler environment variables
        run: |
          if [ -z "$SUPABASE_POOLER_USER" ] || [ -z "$SUPABASE_POOLER_PASSWORD" ] || [ -z "$SUPABASE_POOLER_HOST" ]; then
            echo 'One or more required Supabase Session Pooler environment variables are missing.'
            exit 1
          fi
      # - name: Run Supabase migration
      #   run: |
      #     yes | npx supabase db reset --db-url "postgresql://postgres:$SUPABASE_DB_PASSWORD@db.$SUPABASE_PROJECT_ID.supabase.co:5432/postgres"
      #   env:
      #     SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      #     SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      #     SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      - name: Apply schema.sql via Session Pooler
        env:
          SUPABASE_POOLER_USER: ${{ secrets.SUPABASE_POOLER_USER }}
          SUPABASE_POOLER_PASSWORD: ${{ secrets.SUPABASE_POOLER_PASSWORD }}
          SUPABASE_POOLER_HOST: ${{ secrets.SUPABASE_POOLER_HOST }}
        run: |
          sudo apt-get update && sudo apt-get install -y postgresql-client
          psql "postgresql://$SUPABASE_POOLER_USER:$SUPABASE_POOLER_PASSWORD@$SUPABASE_POOLER_HOST:6543/postgres" -f supabase_schema/init_schema.sql
      - name: Fail if migration error
        if: failure()
        run: |
          echo 'Supabase migration failed. Check init_schema.sql.'
          exit 1

  require-successful-checks:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Require all checks to pass
        run: |
          if [[ "${{ needs.build.result }}" != "success" ]]; then
            echo 'Build or tests failed. Merge blocked.'
            exit 1
          fi
